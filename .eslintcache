[{"D:\\react\\my_project\\src\\index.js":"1","D:\\react\\my_project\\src\\App.js":"2","D:\\react\\My_project\\src\\index.js":"3","D:\\react\\My_project\\src\\App.js":"4","D:\\react\\My_project\\src\\Components\\Admin.js":"5","D:\\react\\My_project\\src\\redux\\SignUpReducer.js":"6","D:\\react\\My_project\\src\\redux\\store.js":"7","D:\\react\\My_project\\src\\Components\\SignIn.js":"8","D:\\react\\My_project\\src\\Components\\SignUp.js":"9","D:\\react\\My_project\\src\\redux\\SignUpPrintAction.js":"10","D:\\react\\My_project\\src\\Components\\Results.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":528,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":443,"mtime":1613417173031,"results":"15","hashOfConfig":"16"},{"size":667,"mtime":1613417120798,"results":"17","hashOfConfig":"16"},{"size":310,"mtime":1613152748440,"results":"18","hashOfConfig":"16"},{"size":376,"mtime":1613406448175,"results":"19","hashOfConfig":"16"},{"size":324,"mtime":1613418337476,"results":"20","hashOfConfig":"16"},{"size":3134,"mtime":1613153810905,"results":"21","hashOfConfig":"16"},{"size":13997,"mtime":1613415738686,"results":"22","hashOfConfig":"16"},{"size":223,"mtime":1613415734068,"results":"23","hashOfConfig":"16"},{"size":748,"mtime":1613418072151,"results":"24","hashOfConfig":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wbsvl9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5htku",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\my_project\\src\\index.js",[],"D:\\react\\my_project\\src\\App.js",[],"D:\\react\\My_project\\src\\index.js",[],"D:\\react\\My_project\\src\\App.js",[],"D:\\react\\My_project\\src\\Components\\Admin.js",[],["49","50"],"D:\\react\\My_project\\src\\redux\\SignUpReducer.js",[],"D:\\react\\My_project\\src\\redux\\store.js",[],"D:\\react\\My_project\\src\\Components\\SignIn.js",["51"],"import React, { useState} from 'react';\r\nimport Logo from './logo.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nconst signInSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .required(),\r\n    password: yup\r\n        .string()\r\n        .required()\r\n})\r\nconst SignIn = () => {\r\n    const { register, handleSubmit} = useForm({\r\n        mode: 'onSubmit',\r\n        resolver: yupResolver(signInSchema),\r\n    })\r\n    const [errorEmail, setErrorEmail] = useState('');\r\n    const [errorPassword, setErrorPassword] = useState('');\r\n    \r\n    const onSubmit = (data) => {\r\n       return Login_(data);\r\n        \r\n    }\r\n    \r\n    function Login_(data) {\r\n        if (data.email === admin.email) {\r\n            if (data.password === admin.password) {\r\n                history.push(\"./admin\");  \r\n            }\r\n            else {\r\n            setErrorPassword('Password you entered is incorrect. Did you forget your password ?');   \r\n            }  \r\n        }\r\n      \r\n       else{ \r\n        setErrorEmail('Email you entered does not match any account.')   \r\n        }\r\n    }\r\n    const history = useHistory();\r\n    const admin = {\r\n        email: \"admin@gmail.com\",\r\n        password: \"admin1234\"\r\n    }\r\n    return (  \r\n        <div className=\"div_\">\r\n        <img src={Logo} className=\"logo\" alt=\"Facebook logo\"/>\r\n            <div className=\"sign\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input className=\"signIn\"\r\n                        style={{ border: (errorEmail !== \"\") ? '1px solid red' : \"\" }}\r\n                        placeholder=\"Mobile number or email address\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        ref={register}\r\n                        required\r\n                    /><div>\r\n                        <span>{(errorEmail !== \"\") ? (<span className=\"err\">{errorEmail}</span>) :\"\" }</span>\r\n                    </div>\r\n                    <input className=\"signIn\"\r\n                        style={{ border: (errorPassword !== \"\") ? '1px solid red' : \"\" }}\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        ref={register}\r\n                        required\r\n                    />\r\n                    {(errorPassword !== \"\") ? (<span className=\"err\">{errorPassword}</span>) : \"\"}\r\n                    <div>\r\n                        <div className=\"div_btn\">\r\n                            <button className=\"btn\" type=\"submit\">Log In</button>\r\n                        </div> </div>\r\n                    <span className=\"psw\"><a href=\"#\">Forgot password ?</a></span>\r\n                    <hr className=\"line\"></hr>\r\n                    <Link to=\"/SignUp\"><button className=\"sign_up_btn\" >Sign Up</button></Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n         \r\n     );\r\n};\r\nexport default SignIn;\r\n\r\n","D:\\react\\My_project\\src\\Components\\SignUp.js",["52"],"D:\\react\\My_project\\src\\redux\\SignUpPrintAction.js",[],"D:\\react\\My_project\\src\\Components\\Results.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":77,"column":43,"nodeType":"59","endLine":77,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":48,"column":11,"nodeType":"62","messageId":"63","endLine":48,"endColumn":21},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'SignUpList' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]