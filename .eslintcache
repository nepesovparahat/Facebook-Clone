[{"/home/parahat/Documents/React/My_project/src/index.js":"1","/home/parahat/Documents/React/My_project/src/App.js":"2","/home/parahat/Documents/React/My_project/src/redux/store.js":"3","/home/parahat/Documents/React/My_project/src/redux/SignUpReducer.js":"4","/home/parahat/Documents/React/My_project/src/Components/SignIn.js":"5","/home/parahat/Documents/React/My_project/src/Components/Admin.js":"6","/home/parahat/Documents/React/My_project/src/Components/SignUp.js":"7","/home/parahat/Documents/React/My_project/src/Components/Results.js":"8","/home/parahat/Documents/React/My_project/src/redux/SignUpAction.js":"9","/home/parahat/Documents/React/Facebook-Clone/src/index.js":"10","/home/parahat/Documents/React/Facebook-Clone/src/App.js":"11","/home/parahat/Documents/React/Facebook-Clone/src/redux/store.js":"12","/home/parahat/Documents/React/Facebook-Clone/src/Components/SignIn.js":"13","/home/parahat/Documents/React/Facebook-Clone/src/Components/Admin.js":"14","/home/parahat/Documents/React/Facebook-Clone/src/Components/Results.js":"15","/home/parahat/Documents/React/Facebook-Clone/src/Components/SignUp.js":"16","/home/parahat/Documents/React/Facebook-Clone/src/redux/SignUpReducer.js":"17","/home/parahat/Documents/React/Facebook-Clone/src/redux/SignUpAction.js":"18"},{"size":409,"mtime":1618243911874,"results":"19","hashOfConfig":"20"},{"size":643,"mtime":1618271583624,"results":"21","hashOfConfig":"20"},{"size":323,"mtime":1618272163287,"results":"22","hashOfConfig":"20"},{"size":318,"mtime":1618272085541,"results":"23","hashOfConfig":"20"},{"size":2529,"mtime":1618313781114,"results":"24","hashOfConfig":"20"},{"size":272,"mtime":1618272141018,"results":"25","hashOfConfig":"20"},{"size":10257,"mtime":1618301879614,"results":"26","hashOfConfig":"20"},{"size":1652,"mtime":1618271857593,"results":"27","hashOfConfig":"20"},{"size":190,"mtime":1618272089189,"results":"28","hashOfConfig":"20"},{"size":416,"mtime":1618587185278,"results":"29","hashOfConfig":"30"},{"size":727,"mtime":1619553816288,"results":"31","hashOfConfig":"30"},{"size":314,"mtime":1618587185306,"results":"32","hashOfConfig":"30"},{"size":2898,"mtime":1629019703352,"results":"33","hashOfConfig":"30"},{"size":276,"mtime":1618587185054,"results":"34","hashOfConfig":"30"},{"size":1876,"mtime":1618587185094,"results":"35","hashOfConfig":"30"},{"size":12892,"mtime":1619357752192,"results":"36","hashOfConfig":"30"},{"size":319,"mtime":1618587185302,"results":"37","hashOfConfig":"30"},{"size":184,"mtime":1618587185294,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s8bn8y",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1g3mr4l",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/home/parahat/Documents/React/My_project/src/index.js",[],"/home/parahat/Documents/React/My_project/src/App.js",[],"/home/parahat/Documents/React/My_project/src/redux/store.js",[],"/home/parahat/Documents/React/My_project/src/redux/SignUpReducer.js",[],"/home/parahat/Documents/React/My_project/src/Components/SignIn.js",["79"],"import React, { useState } from \"react\";\r\nimport Logo from \"./logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nconst signInSchema = yup.object().shape({\r\n\temail: yup.string(),\r\n\tpassword: yup.string(),\r\n});\r\nconst SignIn = () => {\r\n\tconst { register, handleSubmit } = useForm({\r\n\t\tmode: \"onChange\",\r\n\t\tresolver: yupResolver(signInSchema),\r\n\t});\r\n\tconst [errorEmail, setErrorEmail] = useState(\"\");\r\n\r\n\tconst onSubmit = (data) => {\r\n\t\treturn Login_(data);\r\n\t};\r\n\tfunction Login_(data) {\r\n\t\tif (data.email !== admin.email && data.password !== admin.password) {\r\n\t\t\tsetErrorEmail(\"E-mail or password entered does not match, try again.\");\r\n\t\t} else {\r\n\t\t\thistory.push(\"/Admin\");\r\n\t\t}\r\n\t}\r\n\tconst history = useHistory();\r\n\tconst admin = {\r\n\t\temail: \"admin@gmail.com\",\r\n\t\tpassword: \"admin1234\",\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-1\">\r\n\t\t\t\t\t<img src={Logo} className=\"logo\" alt=\"Facebook logo\" />\r\n\t\t\t\t\t<div className=\"h2_\">\r\n\t\t\t\t\t\tFacebook helps you connect and share with the people in your life.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-2\">\r\n\t\t\t\t\t<div className=\"sign\">\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t\t\t\t<div className=\"form-body\">\r\n\t\t\t\t\t\t\t\t{errorEmail !== \"\" ? <span className=\"err\">{errorEmail}</span> : \"\"}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"signIn\"\r\n\t\t\t\t\t\t\t\tstyle={{ border: errorEmail !== \"\" ? \"1px solid red\" : \"\" }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Mobile number or email address\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"form-body\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"signIn\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ border: errorEmail !== \"\" ? \"1px solid red\" : \"\" }}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"div_btn\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tLog In\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span className=\"psw\">\r\n\t\t\t\t\t\t\t\t<a href=\"#\">Forgot password ?</a>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<hr className=\"line\" />\r\n\t\t\t\t\t\t\t<Link to=\"/SignUp\">\r\n\t\t\t\t\t\t\t\t<button className=\"sign_up_btn\">Create New Account</button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default SignIn;\r\n","/home/parahat/Documents/React/My_project/src/Components/Admin.js",[],"/home/parahat/Documents/React/My_project/src/Components/SignUp.js",["80"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { connect } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport { addSignUpAction } from \"../redux/SignUpAction\";\r\n\r\nconst SignUpSchema = yup.object().shape({\r\n\tfirstname: yup\r\n\t\t.string()\r\n\t\t.matches(/^([^0-9]*)$/, \"First name shoul not contain number!\")\r\n\t\t.required(\"First name required field\"),\r\n\tlastname: yup\r\n\t\t.string()\r\n\t\t.matches(/^([^0-9]*)$/, \"Last name shoul not contain number!\")\r\n\t\t.required(\"Last name required field\"),\r\n\temail: yup\r\n\t\t.string()\r\n\t\t.email(\"Email should have correct format\")\r\n\t\t.required(\"Email is a required field\"),\r\n\temailConfirm: yup.string().oneOf([yup.ref(\"email\")], \"Your emal do not match\"),\r\n\tpassword: yup\r\n\t\t.string()\r\n\t\t.matches(\r\n\t\t\t/^.*(?=.{6,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1}).*$/,\r\n\t\t\t\"Password must contain at least 6 characters, one special case character\"\r\n\t\t)\r\n\t\t.required(\"Please enter your password\"),\r\n\tbirthday_day: yup\r\n\t\t.number()\r\n\t\t.transform((value) => (isNaN(value) ? undefined : value))\r\n\t\t.required(\"Select your date of birth required\"),\r\n\tbirthday_month: yup.string().required(\"Select your date of month required\"),\r\n\tbirthday_year: yup\r\n\t\t.number()\r\n\t\t.transform((value) => (isNaN(value) ? undefined : value))\r\n\t\t.required(\"Select your date of year required\"),\r\n\tgender: yup.string().nullable().required(\"Select your gender required field\"),\r\n});\r\n\r\nconst SignUp = (props) => {\r\n\tconst { SignUpList, add } = props;\r\n\tconst [signUpstate, setsignUpstate] = useState({});\r\n\tconst history = useHistory();\r\n\tconst { register, errors, handleSubmit, watch } = useForm({\r\n\t\tmode: \"onBlur\",\r\n\t\tresolver: yupResolver(SignUpSchema),\r\n\t});\r\n\tconst email = watch(\"email\");\r\n\tconst click = () => {\r\n\t\thistory.push(\"/Results\");\r\n\t};\r\n\r\n\tconst onSubmit = () => {};\r\n\tconst yearArr = [];\r\n\tconst dayArr = [];\r\n\tconst monthArr = [\r\n\t\t\"January\",\r\n\t\t\"February\",\r\n\t\t\"March\",\r\n\t\t\"April\",\r\n\t\t\"May\",\r\n\t\t\"June\",\r\n\t\t\"July\",\r\n\t\t\"August\",\r\n\t\t\"September\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\",\r\n\t];\r\n\tfor (let i = 1; i <= 31; i++) {\r\n\t\tdayArr.push(i);\r\n\t}\r\n\tfor (let i = 1910; i < 2022; i++) {\r\n\t\tyearArr.push(i);\r\n\t}\r\n\tconst reversArr = yearArr.reverse();\r\n\r\n\treturn (\r\n\t\t<div className=\"sign_up_nav\">\r\n\t\t\t<div className=\"sign_up\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"head\">Sign Up</span>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<p className=\"subhead\">It's quick and easy.</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"frm\">\r\n\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t\t\t<div className=\"div1\">\r\n\t\t\t\t\t\t\t<div className=\"input_div1\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"input1\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tborder: !!errors.firstname ? \"1px solid red\" : errors?.firstname?.message,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"firstname\"\r\n\t\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t\t...{ firstname: event.target.value },\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Your name\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className=\"div1_err\">\r\n\t\t\t\t\t\t\t\t\t{!!errors.firstname}\r\n\t\t\t\t\t\t\t\t\t{errors?.firstname?.message}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input_div2\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"input1\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tborder: !!errors.lastname ? \"1px solid red\" : errors?.lastname?.message,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Your surname\"\r\n\t\t\t\t\t\t\t\t\tname=\"lastname\"\r\n\t\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t\t...{ lastname: event.target.value },\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className=\"div1_err\">\r\n\t\t\t\t\t\t\t\t\t{!!errors.lastname}\r\n\t\t\t\t\t\t\t\t\t{errors?.lastname?.message}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"signUpInput\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: !!errors.email ? \"1px solid red\" : errors?.email?.message,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Your e-mail\"\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t...{ email: event.target.value },\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<span className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.email}\r\n\t\t\t\t\t\t\t{errors?.email?.message}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{email && (\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"signUpInput\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: !!errors.emailConfirm ? \"1px solid red\" : errors?.emailConfirm?.message,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tname=\"emailConfirm\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Re-enter e-mail\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ emailConfirm: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<span className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.emailConfirm}\r\n\t\t\t\t\t\t\t{errors?.emailConfirm?.message}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"signUpInput\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: !!errors.password ? \"1px solid red\" : errors?.password?.message,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"New password\"\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t...{ password: event.target.value },\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<span className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.password}\r\n\t\t\t\t\t\t\t{errors?.password?.message}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\taria-label=\"Day\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tname=\"birthday_day\"\r\n\t\t\t\t\t\t\t\ttitle=\"Day\"\r\n\t\t\t\t\t\t\t\tclassName=\"select_\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: !!errors.birthday_day ? \"1px solid red\" : errors?.birthday_day?.message,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ birthday_day: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Day</option>\r\n\t\t\t\t\t\t\t\t{dayArr.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<option value={item} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\taria-label=\"Month\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tname=\"birthday_month\"\r\n\t\t\t\t\t\t\t\tid=\"Month\"\r\n\t\t\t\t\t\t\t\ttitle=\"Month\"\r\n\t\t\t\t\t\t\t\tclassName=\"select_\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: !!errors.birthday_month\r\n\t\t\t\t\t\t\t\t\t\t? \"1px solid red\"\r\n\t\t\t\t\t\t\t\t\t\t: errors?.birthday_month?.message,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ birthday_month: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Month</option>\r\n\t\t\t\t\t\t\t\t{monthArr.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<option key={index} value={item}>\r\n\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\taria-label=\"Year\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tname=\"birthday_year\"\r\n\t\t\t\t\t\t\t\ttitle=\"Year\"\r\n\t\t\t\t\t\t\t\tclassName=\"select_\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: !!errors.birthday_year\r\n\t\t\t\t\t\t\t\t\t\t? \"1px solid red\"\r\n\t\t\t\t\t\t\t\t\t\t: errors?.birthday_year?.message,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ birthday_year: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Year</option>\r\n\t\t\t\t\t\t\t\t{reversArr.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<option key={index} value={item}>\r\n\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.birthday_day}\r\n\t\t\t\t\t\t\t{errors?.birthday_day?.message}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.birthday_month}\r\n\t\t\t\t\t\t\t{errors?.birthday_month?.message}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.birthday_year}\r\n\t\t\t\t\t\t\t{errors?.birthday_year?.message}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"radio_span\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: !!errors.gender ? \"1px solid red\" : errors?.gender?.message,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label className=\"lbl\">Famale</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tclassName=\"input_\"\r\n\t\t\t\t\t\t\t\tname=\"gender\"\r\n\t\t\t\t\t\t\t\tvalue=\"Famele\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ gender: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"radio_span\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: !!errors.gender ? \"1px solid red\" : errors?.gender?.message,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label className=\"lbl\">Male</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"input_\"\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tname=\"gender\"\r\n\t\t\t\t\t\t\t\tvalue=\"Male\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ gender: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"radio_span\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: !!errors.gender ? \"1px solid red\" : errors?.gender?.message,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label className=\"lbl\">Custom</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tclassName=\"input_\"\r\n\t\t\t\t\t\t\t\tname=\"gender\"\r\n\t\t\t\t\t\t\t\tvalue=\"Custom\"\r\n\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tsetsignUpstate({\r\n\t\t\t\t\t\t\t\t\t\t...signUpstate,\r\n\t\t\t\t\t\t\t\t\t\t...{ gender: event.target.value },\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<span className=\"err\">\r\n\t\t\t\t\t\t\t{!!errors.gender}\r\n\t\t\t\t\t\t\t{errors?.gender?.message}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<button className=\"register-btn\"onClick={(event) => {\r\n\t\t\t\t\t\t\t\tclick();\r\n\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t\tadd(signUpstate);\r\n\t\t\t\t\t\t\t}} type=\"submit\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/SignIn\" className=\"cancel\">\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tSignUpList: state.signup,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tadd: (res) => {\r\n\t\t\tdispatch(addSignUpAction(res));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","/home/parahat/Documents/React/My_project/src/Components/Results.js",[],"/home/parahat/Documents/React/My_project/src/redux/SignUpAction.js",[],"/home/parahat/Documents/React/Facebook-Clone/src/index.js",[],["81","82"],"/home/parahat/Documents/React/Facebook-Clone/src/App.js",[],"/home/parahat/Documents/React/Facebook-Clone/src/redux/store.js",[],"/home/parahat/Documents/React/Facebook-Clone/src/Components/SignIn.js",["83"],"/home/parahat/Documents/React/Facebook-Clone/src/Components/Admin.js",[],"/home/parahat/Documents/React/Facebook-Clone/src/Components/Results.js",[],"/home/parahat/Documents/React/Facebook-Clone/src/Components/SignUp.js",["84"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { connect } from \"react-redux\";\nimport * as yup from \"yup\";\nimport { addSignUpAction } from \"../redux/SignUpAction\";\n\nconst SignUpSchema = yup.object().shape({\n  firstname: yup\n    .string()\n    .matches(/^([^0-9]*)$/, \"First name shoul not contain number!\")\n    .required(\"First name required field\"),\n  lastname: yup\n    .string()\n    .matches(/^([^0-9]*)$/, \"Last name shoul not contain number!\")\n    .required(\"Last name required field\"),\n  email: yup\n    .string()\n    .email(\"Email should have correct format\")\n    .required(\"Email is a required field\"),\n  emailConfirm: yup\n    .string()\n    .oneOf([yup.ref(\"email\")], \"Your emal do not match\"),\n  password: yup\n    .string()\n    .matches(\n      /^.*(?=.{6,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1}).*$/,\n      \"Password must contain at least 6 characters, one special case character\"\n    )\n    .required(\"Please enter your password\"),\n  birthday_day: yup\n    .number()\n    .transform((value) => (isNaN(value) ? undefined : value))\n    .required(\"Select your date of birth required\"),\n  birthday_month: yup.string().required(\"Select your date of month required\"),\n  birthday_year: yup\n    .number()\n    .transform((value) => (isNaN(value) ? undefined : value))\n    .required(\"Select your date of year required\"),\n  gender: yup.string().nullable().required(\"Select your gender required field\"),\n});\n\nconst SignUp = (props) => {\n  const { SignUpList, add } = props;\n  const [signUpstate, setsignUpstate] = useState({});\n  const history = useHistory();\n  const [shovBtn, setShovBtn] = useState(false);\n  const shov = () => setShovBtn(true);\n  const { register, errors, handleSubmit, watch } = useForm({\n    mode: \"onBlur\",\n    resolver: yupResolver(SignUpSchema),\n  });\n  const email = watch(\"email\");\n  const click = () => {\n    history.push(\"/Results\");\n  };\n\n  const onSubmit = () => {\n    shov();\n  };\n  const yearArr = [];\n  const dayArr = [];\n  const monthArr = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  for (let i = 1; i <= 31; i++) {\n    dayArr.push(i);\n  }\n  for (let i = 1910; i < 2022; i++) {\n    yearArr.push(i);\n  }\n  const reversArr = yearArr.reverse();\n  return (\n    <div className=\"sign_up_nav\">\n      <div className=\"sign_up\">\n        <div>\n          <span className=\"head\">Sign Up</span>\n          <br />\n          <p className=\"subhead\">It's quick and easy.</p>\n        </div>\n        <div className=\"frm\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"div1\">\n              <div className=\"input_div1\">\n                <input\n                  className=\"input1\"\n                  style={{\n                    border: !!errors.firstname\n                      ? \"1px solid red\"\n                      : errors?.firstname?.message,\n                  }}\n                  type=\"text\"\n                  name=\"firstname\"\n                  ref={register}\n                  onChange={(event) => {\n                    setsignUpstate({\n                      ...signUpstate,\n                      ...{ firstname: event.target.value },\n                    });\n                  }}\n                  placeholder=\"Your name\"\n                />\n                <div className=\"div1_err\">\n                  {!!errors.firstname}\n                  {errors?.firstname?.message}\n                </div>\n              </div>\n              <div className=\"input_div2\">\n                <input\n                  className=\"input1\"\n                  style={{\n                    border: !!errors.lastname\n                      ? \"1px solid red\"\n                      : errors?.lastname?.message,\n                  }}\n                  type=\"text\"\n                  placeholder=\"Your surname\"\n                  name=\"lastname\"\n                  ref={register}\n                  onChange={(event) => {\n                    setsignUpstate({\n                      ...signUpstate,\n                      ...{ lastname: event.target.value },\n                    });\n                  }}\n                />\n                <div className=\"div1_err\">\n                  {!!errors.lastname}\n                  {errors?.lastname?.message}\n                </div>\n              </div>\n            </div>\n            <input\n              className=\"signUpInput\"\n              style={{\n                border: !!errors.email\n                  ? \"1px solid red\"\n                  : errors?.email?.message,\n              }}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Your e-mail\"\n              ref={register}\n              onChange={(event) => {\n                setsignUpstate({\n                  ...signUpstate,\n                  ...{ email: event.target.value },\n                });\n              }}\n            />\n            <br />\n            <span className=\"err\">\n              {!!errors.email}\n              {errors?.email?.message}\n            </span>\n            {email && (\n              <input\n                className=\"signUpInput\"\n                style={{\n                  border: !!errors.emailConfirm\n                    ? \"1px solid red\"\n                    : errors?.emailConfirm?.message,\n                }}\n                type=\"email\"\n                name=\"emailConfirm\"\n                placeholder=\"Re-enter e-mail\"\n                ref={register}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ emailConfirm: event.target.value },\n                  });\n                }}\n              />\n            )}\n            <span className=\"err\">\n              {!!errors.emailConfirm}\n              {errors?.emailConfirm?.message}\n            </span>\n            <input\n              className=\"signUpInput\"\n              style={{\n                border: !!errors.password\n                  ? \"1px solid red\"\n                  : errors?.password?.message,\n              }}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"New password\"\n              ref={register}\n              onChange={(event) => {\n                setsignUpstate({\n                  ...signUpstate,\n                  ...{ password: event.target.value },\n                });\n              }}\n            />\n            <br />\n            <span className=\"err\">\n              {!!errors.password}\n              {errors?.password?.message}\n            </span>\n            <span>\n              <select\n                aria-label=\"Day\"\n                ref={register}\n                name=\"birthday_day\"\n                title=\"Day\"\n                className=\"select_\"\n                style={{\n                  border: !!errors.birthday_day\n                    ? \"1px solid red\"\n                    : errors?.birthday_day?.message,\n                }}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ birthday_day: event.target.value },\n                  });\n                }}\n              >\n                <option value=\"\">Day</option>\n                {dayArr.map((item, index) => (\n                  <option value={item} key={index}>\n                    {item}\n                  </option>\n                ))}\n              </select>\n              <select\n                aria-label=\"Month\"\n                ref={register}\n                name=\"birthday_month\"\n                id=\"Month\"\n                title=\"Month\"\n                className=\"select_\"\n                style={{\n                  border: !!errors.birthday_month\n                    ? \"1px solid red\"\n                    : errors?.birthday_month?.message,\n                }}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ birthday_month: event.target.value },\n                  });\n                }}\n              >\n                <option value=\"\">Month</option>\n                {monthArr.map((item, index) => (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                ))}\n              </select>\n              <select\n                aria-label=\"Year\"\n                ref={register}\n                name=\"birthday_year\"\n                title=\"Year\"\n                className=\"select_\"\n                style={{\n                  border: !!errors.birthday_year\n                    ? \"1px solid red\"\n                    : errors?.birthday_year?.message,\n                }}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ birthday_year: event.target.value },\n                  });\n                }}\n              >\n                <option value=\"\">Year</option>\n                {reversArr.map((item, index) => (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                ))}\n              </select>\n            </span>\n            <div className=\"err\">\n              {!!errors.birthday_day}\n              {errors?.birthday_day?.message}\n            </div>\n            <div className=\"err\">\n              {!!errors.birthday_month}\n              {errors?.birthday_month?.message}\n            </div>\n            <div className=\"err\">\n              {!!errors.birthday_year}\n              {errors?.birthday_year?.message}\n            </div>\n            <span\n              className=\"radio_span\"\n              style={{\n                border: !!errors.gender\n                  ? \"1px solid red\"\n                  : errors?.gender?.message,\n              }}\n            >\n              <label className=\"lbl\">Famale</label>\n              <input\n                type=\"radio\"\n                className=\"input_\"\n                name=\"gender\"\n                value=\"Famele\"\n                ref={register}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ gender: event.target.value },\n                  });\n                }}\n              />\n            </span>\n            <span\n              className=\"radio_span\"\n              style={{\n                border: !!errors.gender\n                  ? \"1px solid red\"\n                  : errors?.gender?.message,\n              }}\n            >\n              <label className=\"lbl\">Male</label>\n              <input\n                className=\"input_\"\n                type=\"radio\"\n                name=\"gender\"\n                value=\"Male\"\n                ref={register}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ gender: event.target.value },\n                  });\n                }}\n              />\n            </span>\n            <span\n              className=\"radio_span\"\n              style={{\n                border: !!errors.gender\n                  ? \"1px solid red\"\n                  : errors?.gender?.message,\n              }}\n            >\n              <label className=\"lbl\">Custom</label>\n              <input\n                type=\"radio\"\n                className=\"input_\"\n                name=\"gender\"\n                value=\"Custom\"\n                ref={register}\n                onChange={(event) => {\n                  setsignUpstate({\n                    ...signUpstate,\n                    ...{ gender: event.target.value },\n                  });\n                }}\n              />\n            </span>\n            <br />\n            <span className=\"err\">\n              {!!errors.gender}\n              {errors?.gender?.message}\n            </span>\n            <button className=\"register-btn\" type=\"submit\">\n              Sign Up\n            </button>\n            <br />\n            {shovBtn ? (\n              <button\n                className=\"record-btn\"\n                onClick={(event) => {\n                  click();\n                  event.preventDefault();\n                  add(signUpstate);\n                }}\n              >\n                Show Record\n              </button>\n            ) : null}\n          </form>\n        </div>\n        <Link to=\"/SignIn\" className=\"cancel\">\n          Cancel\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    SignUpList: state.signup,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add: (res) => {\n      dispatch(addSignUpAction(res));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","/home/parahat/Documents/React/Facebook-Clone/src/redux/SignUpReducer.js",[],"/home/parahat/Documents/React/Facebook-Clone/src/redux/SignUpAction.js",[],{"ruleId":"85","severity":1,"message":"86","line":75,"column":9,"nodeType":"87","endLine":75,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":43,"column":10,"nodeType":"90","messageId":"91","endLine":43,"endColumn":20},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"85","severity":1,"message":"86","line":82,"column":17,"nodeType":"87","endLine":82,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":45,"column":11,"nodeType":"90","messageId":"91","endLine":45,"endColumn":21},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'SignUpList' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-global-assign","no-unsafe-negation"]